해시 탐색법으로 데이터를 탐색하는 알고리즘

찾을때도 저장할 때 사용한 것과 같은 해시함수를 사용하여 위치를 산출한다.

	해시값 = 데이터값 % 배열의 길이

찾을 값 x의 위치를 산출하여
(위치)k = x% 11 

맞는지 확인한다.
arr[k] == x

맞으면 처리하고 종료

arr[k] != x
찾는 값이 아니거나 충돌로 인해 다른 위치에 있는경우이다

여기서 저장할 때 사용한 k가 배열의 index의 마지막을 넘어가도 문제가 생기지 않도록
(k+1)%11을 사용한다.

즉 arr[k] != x 의 경우에는 k = (k+1) % 11을 연산하여
arr[k] == x 의 성립 여부를 확인한다.(주피터노트 확인)

============================================

검색 하고 있는 데이터가 존재하지 않을 경우
현재는 찾는 데이터가 존재하지 않는 경우 무한 루프가 발생된다.

탐색 데이터가 발견되지 않으면 k값을 점점 증가하다가 다시 처음부터 검색하고 이과정이 계속 반복된다.
그러면 어디까지 찾아야 존재하지 않는다고 말할 수 있을까?
바로 데이터가 보관되지 않는 요소가(처음에 배열을 0으로 초기화 함) 즉 0이 나왔을 때까지 이다.

만약 데이터가 존재한다면 설사 저장할 때 충돌이 발생하여 어딘가 다른 요소에 저장되어 있다 하더라도
저장 위치를 찾을 때까지의 사이에 데이터가 0인 요소는 절대 있을 수 없다.

(주피터에 그림과 같이 설명해놓음)








